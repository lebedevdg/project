stages:
  - test
  - build
  - review
  - stage
  - production

test_unit_ui_job:
  stage: test
  image: python:3.6.0-alpine
  before_script:
    - cd apps/ui
    - pip install -r requirements.txt -r requirements-test.txt
  script:
    - echo 'Testing UI'
    - python -m unittest discover -s tests/

test_unit_robot_job:
  stage: test
  image: python:3.6.0-alpine
  before_script:
    - cd apps/robot
    - pip install -r requirements.txt -r requirements-test.txt
  script:
    - echo 'Testing Robot'
    - python -m unittest discover -s tests/

build_job:
  stage: build
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  before_script:
    - docker info
    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASSWORD
    - docker image ls
  script:
    - echo 'Building'
    - docker build -t $DOCKER_HUB_LOGIN/robot ./apps/robot
    - if [[ "$CI_COMMIT_TAG" != "" ]]; then docker push $DOCKER_HUB_LOGIN/robot; fi
    - docker build -t $DOCKER_HUB_LOGIN/ui ./apps/ui
    - if [[ "$CI_COMMIT_TAG" != "" ]]; then docker push $DOCKER_HUB_LOGIN/ui; fi
    - docker tag $DOCKER_HUB_LOGIN/robot $DOCKER_HUB_LOGIN/robot:${CI_COMMIT_TAG:-1.0.0}.${CI_COMMIT_SHORT_SHA:-0}
    - docker push $DOCKER_HUB_LOGIN/robot:${CI_COMMIT_TAG:-1.0.0}.${CI_COMMIT_SHORT_SHA:-0}
    - docker tag $DOCKER_HUB_LOGIN/ui $DOCKER_HUB_LOGIN/ui:${CI_COMMIT_TAG:-1.0.0}.${CI_COMMIT_SHORT_SHA:-0}
    - docker push $DOCKER_HUB_LOGIN/ui:${CI_COMMIT_TAG:-1.0.0}.${CI_COMMIT_SHORT_SHA:-0}
    - docker build -t $DOCKER_HUB_LOGIN/rabbitmq ./monitoring/rabbitmq
    - docker push $DOCKER_HUB_LOGIN/rabbitmq
  after_script:
    - docker image ls

.branch_review_job: &branch_review_template
  stage: review
  image: docker:19.03.8
  variables:
    DOCKER_TLS_VERIFY: '1'
    DOCKER_HOST: 'tcp://$CI_SERVER_HOST:2376'
    DOCKER_CERT_PATH: '/tmp/$CI_COMMIT_REF_NAME'
    PROJECTNAME: '$DOCKER_HUB_LOGIN'
  before_script:
    - mkdir -p $DOCKER_CERT_PATH
    - cp -f $DOCKER_HOST_CA_FILE $DOCKER_CERT_PATH/ca.pem
    - cp -f $DOCKER_HOST_CERT_FILE $DOCKER_CERT_PATH/cert.pem
    - cp -f $DOCKER_HOST_KEY_FILE $DOCKER_CERT_PATH/key.pem
    - echo "DOCKER_CERT_PATH=$DOCKER_CERT_PATH"
    - ls -a $DOCKER_CERT_PATH
    - echo "DOCKER_HOST=$DOCKER_HOST"
    - docker info
    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASSWORD
    - apk add py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - docker-compose --version
    - docker ps -as
    - docker image ls
    - export APP_TAG=${CI_COMMIT_TAG:-1.0.0}.${CI_COMMIT_SHORT_SHA:-0}
    - export ENV_FILE=`test -f ./docker/.env && echo './docker/.env' || echo './docker/.env.example'`
    - docker-compose --env-file $ENV_FILE -f ./docker/docker-compose.yml config
  after_script:
    - docker ps -as
    - docker image ls
  only:
    - branches
  except:
    - master

branch_review:
  <<: *branch_review_template
  script:
    - echo "Deploy on branch/$CI_COMMIT_REF_NAME environment"
    - docker-compose --env-file $ENV_FILE -f ./docker/docker-compose.yml up -d
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_SERVER_HOST:8000
    on_stop: stop_branch_review
    auto_stop_in: 3 days

stop_branch_review:
  <<: *branch_review_template
  when: manual
  script:
    - echo 'Remove branch review app'
    - docker-compose --env-file $ENV_FILE -f ./docker/docker-compose.yml down || echo
    - docker image rm -f $(docker image ls -q $DOCKER_HUB_LOGIN/robot) || echo
    - docker image rm -f $(docker image ls -q $DOCKER_HUB_LOGIN/ui) || echo
    - docker image rm -f $(docker image ls -q --filter 'dangling=true') || echo
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    action: stop

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy on stage'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy on production'
  environment:
    name: production
    url: https://example.com

pages:
  stage: test
  image: python:3.6.0-alpine
  before_script:
    - cd apps/ui; pip install -r requirements.txt -r requirements-test.txt; cd -
    - cd apps/robot; pip install -r requirements.txt -r requirements-test.txt; cd -
    - mkdir -p public
  script:
    - echo '<html><body><pre>' > public/index.html
    - echo "Commit $CI_COMMIT_SHORT_SHA" >> public/index.html
    - echo '' >> public/index.html
    - echo 'Отчет о покрытии кода UI тестами:' >> public/index.html
    - cd apps/ui; coverage run -m unittest discover -s tests/; coverage report --include ui/ui.py >> ../../public/index.html; cd -
    - echo '' >> public/index.html
    - echo 'Отчет о покрытии кода Robot тестами:' >> public/index.html
    - cd apps/robot; coverage run -m unittest discover -s tests/; coverage report --include crawler/crawler.py >> ../../public/index.html; cd -
    - echo '</pre></body></html>' >> public/index.html
  artifacts:
    paths:
      - public
